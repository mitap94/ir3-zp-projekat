package gui;

import java.security.KeyPair;

import java.awt.*;
import crypto.CertManager;
import crypto.KeyContainer;
import java.security.InvalidParameterException;
import java.util.Base64;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Mita
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow(CertManager manager) {
        initComponents();
        myInitComponents();
        
        this.manager = manager;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabsPanel = new javax.swing.JTabbedPane();
        certificateTab = new javax.swing.JPanel();
        keysTab = new javax.swing.JPanel();
        generatedKeysLabel = new javax.swing.JLabel();
        importExportPanel = new javax.swing.JPanel();
        importButton = new javax.swing.JButton();
        exportButton = new javax.swing.JButton();
        keyGenerationPanel = new javax.swing.JPanel();
        saveKeyButton = new javax.swing.JButton();
        publicKeyTextField = new javax.swing.JTextField();
        generateKeysButton = new javax.swing.JButton();
        privateKeyTextField = new javax.swing.JTextField();
        publicKeyLabel = new javax.swing.JLabel();
        keyNameLabel = new javax.swing.JLabel();
        keyNameTextField = new javax.swing.JTextField();
        privateKeyLabel = new javax.swing.JLabel();
        keySizeTextField = new javax.swing.JTextField();
        keySizeLabel = new javax.swing.JLabel();
        keyGenerationLabel = new javax.swing.JLabel();
        keyDisplayLabel = new javax.swing.JLabel();
        generatedKeysScrollPanel = new javax.swing.JScrollPane();
        generatedKeysList = new javax.swing.JList<>();
        keyDisplayScrollPanel = new javax.swing.JScrollPane();
        statusBarTextField = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(" x.509 CertManager");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(860, 640));
        setName("Window"); // NOI18N
        setSize(new java.awt.Dimension(860, 640));

        tabsPanel.setMinimumSize(new java.awt.Dimension(795, 560));
        tabsPanel.setName("tabsPanel"); // NOI18N
        tabsPanel.setPreferredSize(new java.awt.Dimension(795, 560));

        certificateTab.setMinimumSize(new java.awt.Dimension(790, 532));

        javax.swing.GroupLayout certificateTabLayout = new javax.swing.GroupLayout(certificateTab);
        certificateTab.setLayout(certificateTabLayout);
        certificateTabLayout.setHorizontalGroup(
            certificateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 855, Short.MAX_VALUE)
        );
        certificateTabLayout.setVerticalGroup(
            certificateTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 574, Short.MAX_VALUE)
        );

        tabsPanel.addTab("Certificate", certificateTab);

        keysTab.setMinimumSize(new java.awt.Dimension(790, 532));
        keysTab.setPreferredSize(new java.awt.Dimension(790, 532));

        generatedKeysLabel.setText("Generated keys");

        importButton.setText("Import");
        importButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importButtonActionPerformed(evt);
            }
        });

        exportButton.setText("Export");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout importExportPanelLayout = new javax.swing.GroupLayout(importExportPanel);
        importExportPanel.setLayout(importExportPanelLayout);
        importExportPanelLayout.setHorizontalGroup(
            importExportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(importExportPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(importButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(exportButton)
                .addContainerGap())
        );
        importExportPanelLayout.setVerticalGroup(
            importExportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(importExportPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(importExportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exportButton)
                    .addComponent(importButton))
                .addContainerGap())
        );

        keyGenerationPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        saveKeyButton.setText("Save Key Pair");
        saveKeyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveKeyButtonActionPerformed(evt);
            }
        });

        publicKeyTextField.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        publicKeyTextField.setEnabled(false);
        publicKeyTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publicKeyTextFieldActionPerformed(evt);
            }
        });

        generateKeysButton.setText("Generate Key Pair");
        generateKeysButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateKeysButtonActionPerformed(evt);
            }
        });

        privateKeyTextField.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        privateKeyTextField.setEnabled(false);

        publicKeyLabel.setText("Public key:");

        keyNameLabel.setText("Key name:");

        keyNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyNameTextFieldActionPerformed(evt);
            }
        });

        privateKeyLabel.setText("Private key:");

        keySizeLabel.setText("Key size:");

        javax.swing.GroupLayout keyGenerationPanelLayout = new javax.swing.GroupLayout(keyGenerationPanel);
        keyGenerationPanel.setLayout(keyGenerationPanelLayout);
        keyGenerationPanelLayout.setHorizontalGroup(
            keyGenerationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(keyGenerationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(keyGenerationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(keyGenerationPanelLayout.createSequentialGroup()
                        .addComponent(privateKeyLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(privateKeyTextField)
                        .addContainerGap())
                    .addGroup(keyGenerationPanelLayout.createSequentialGroup()
                        .addGroup(keyGenerationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(keyNameLabel)
                            .addComponent(publicKeyLabel))
                        .addGroup(keyGenerationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(keyGenerationPanelLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(generateKeysButton)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(keyGenerationPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(keyGenerationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(keyGenerationPanelLayout.createSequentialGroup()
                                        .addComponent(keyNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(80, 80, 80)
                                        .addComponent(keySizeLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(keySizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(publicKeyTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE))
                                .addContainerGap())))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, keyGenerationPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveKeyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        keyGenerationPanelLayout.setVerticalGroup(
            keyGenerationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(keyGenerationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(keyGenerationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keyNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keyNameLabel)
                    .addComponent(keySizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keySizeLabel))
                .addGap(18, 18, 18)
                .addComponent(generateKeysButton)
                .addGap(18, 18, 18)
                .addGroup(keyGenerationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publicKeyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(publicKeyLabel))
                .addGap(18, 18, 18)
                .addGroup(keyGenerationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(privateKeyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(privateKeyLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(saveKeyButton)
                .addContainerGap())
        );

        keyGenerationLabel.setText("Key Generation");

        keyDisplayLabel.setText("Key Display");

        generatedKeysList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        generatedKeysList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        generatedKeysScrollPanel.setViewportView(generatedKeysList);

        javax.swing.GroupLayout keysTabLayout = new javax.swing.GroupLayout(keysTab);
        keysTab.setLayout(keysTabLayout);
        keysTabLayout.setHorizontalGroup(
            keysTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, keysTabLayout.createSequentialGroup()
                .addGroup(keysTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(keysTabLayout.createSequentialGroup()
                        .addGroup(keysTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(keysTabLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(keyGenerationLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(keysTabLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(keyGenerationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(keysTabLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(keyDisplayScrollPanel)))
                        .addGap(18, 18, 18))
                    .addGroup(keysTabLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(keyDisplayLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(keysTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(importExportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generatedKeysScrollPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, keysTabLayout.createSequentialGroup()
                .addContainerGap(666, Short.MAX_VALUE)
                .addComponent(generatedKeysLabel)
                .addGap(113, 113, 113))
        );

        keysTabLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {generatedKeysScrollPanel, importExportPanel});

        keysTabLayout.setVerticalGroup(
            keysTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(keysTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(keysTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keyGenerationLabel)
                    .addComponent(generatedKeysLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(keysTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(keysTabLayout.createSequentialGroup()
                        .addComponent(keyGenerationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(keyDisplayLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(keyDisplayScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(keysTabLayout.createSequentialGroup()
                        .addComponent(generatedKeysScrollPanel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(importExportPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        tabsPanel.addTab("Keys", keysTab);

        statusBarTextField.setEditable(false);
        statusBarTextField.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        statusBarTextField.setForeground(new java.awt.Color(255, 0, 0));
        statusBarTextField.setBorder(null);
        statusBarTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        statusBarTextField.setMinimumSize(new java.awt.Dimension(800, 17));
        statusBarTextField.setName(""); // NOI18N
        statusBarTextField.setPreferredSize(new java.awt.Dimension(800, 17));
        statusBarTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusBarTextFieldActionPerformed(evt);
            }
        });

        jMenu1.setMnemonic('f');
        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setMnemonic('e');
        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setMnemonic('v');
        jMenu3.setText("View");
        jMenu3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(statusBarTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(statusBarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tabsPanel.getAccessibleContext().setAccessibleName("tabsPanel");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void keyNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_keyNameTextFieldActionPerformed

    private void generateKeysButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateKeysButtonActionPerformed
        try {
            int keySize = Integer.parseInt(keySizeTextField.getText());
        
            KeyPair keys = manager.generateKeyPair(keySize);
            String keyName = keyNameTextField.getText();

            keyContainer = new KeyContainer(keyName, keys, keySize);
            
            publicKeyTextField.setText(Base64.getEncoder()
                    .encodeToString(keys.getPublic().getEncoded()));
            System.out.println(keys.getPublic().getFormat());
            privateKeyTextField.setText(Base64.getEncoder()
                    .encodeToString(keys.getPrivate().getEncoded()));
            System.out.println(keys.getPrivate().getFormat());
            
            statusBarTextField.setForeground(Messages.COLOR);
            statusBarTextField.setText(Messages.SUCCESSFUL_KEY_GENERATION);
        
        } catch (NumberFormatException e) {
            statusBarTextField.setForeground(Errors.COLOR);
            statusBarTextField.setText(Errors.INVALID_NUMBER_FORMAT + " " + Errors.KEY_SIZE_FORMAT);
        } catch (InvalidParameterException e) {
            statusBarTextField.setForeground(Errors.COLOR);
            statusBarTextField.setText(Errors.KEY_SIZE_TOO_SMALL);
        }
    }//GEN-LAST:event_generateKeysButtonActionPerformed

    private void publicKeyTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publicKeyTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_publicKeyTextFieldActionPerformed

    private void statusBarTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusBarTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusBarTextFieldActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "PCKS#12", "jpg");
        fileChooser.setFileFilter(filter);
        int returnVal = fileChooser.showSaveDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            statusBarTextField.setForeground(Messages.COLOR);
            statusBarTextField.setText(Messages.SUCCESSFUL_EXPORT + fileChooser
                    .getSelectedFile().getName());
        }
        // IZVOZ...
        
    }//GEN-LAST:event_exportButtonActionPerformed

    private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "PCKS#12", "jpg");
        fileChooser.setFileFilter(filter);
        int returnVal = fileChooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            statusBarTextField.setForeground(Messages.COLOR);
            statusBarTextField.setText(Messages.SUCCESSFUL_IMPORT + fileChooser
                    .getSelectedFile().getName());
        }
        // UVOZ...
        
    }//GEN-LAST:event_importButtonActionPerformed

    private void saveKeyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveKeyButtonActionPerformed
        String keyName = keyNameTextField.getText().trim();
        if (!keyName.isEmpty()) {
            
        }
        else {
            statusBarTextField.setForeground(Errors.COLOR);
            statusBarTextField.setText(Errors.NO_KEY_NAME_SPECIFIED);
        }
    }//GEN-LAST:event_saveKeyButtonActionPerformed
    
    public void myInitComponents() {
        screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        frameSize = this.getSize();
        leftCornerAnchor = new Point((int)(screenSize.width/2 - frameSize.width/2),
                (int)(screenSize.height/2 - frameSize.height/2));
        setLocation(leftCornerAnchor);
    }
    
    private Dimension screenSize;
    private Dimension frameSize;
    private Point leftCornerAnchor;
    
    private CertManager manager;
    private KeyContainer keyContainer;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel certificateTab;
    private javax.swing.JButton exportButton;
    private javax.swing.JButton generateKeysButton;
    private javax.swing.JLabel generatedKeysLabel;
    private javax.swing.JList<String> generatedKeysList;
    private javax.swing.JScrollPane generatedKeysScrollPanel;
    private javax.swing.JButton importButton;
    private javax.swing.JPanel importExportPanel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel keyDisplayLabel;
    private javax.swing.JScrollPane keyDisplayScrollPanel;
    private javax.swing.JLabel keyGenerationLabel;
    private javax.swing.JPanel keyGenerationPanel;
    private javax.swing.JLabel keyNameLabel;
    private javax.swing.JTextField keyNameTextField;
    private javax.swing.JLabel keySizeLabel;
    private javax.swing.JTextField keySizeTextField;
    private javax.swing.JPanel keysTab;
    private javax.swing.JLabel privateKeyLabel;
    private javax.swing.JTextField privateKeyTextField;
    private javax.swing.JLabel publicKeyLabel;
    private javax.swing.JTextField publicKeyTextField;
    private javax.swing.JButton saveKeyButton;
    private javax.swing.JTextField statusBarTextField;
    private javax.swing.JTabbedPane tabsPanel;
    // End of variables declaration//GEN-END:variables
}
